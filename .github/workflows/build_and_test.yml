on:
  workflow_call:
    inputs:
      build_env:
        description: dev / stg / prd
        required: true
        type: string
      tags:
        description: docker image tags
        required: true
        type: string

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.github_token }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: build
          build-args: |
            build_env=${{ inputs.build_env }}
          tags: ${{ inputs.tags }}
          # labels: ${{ needs.set-vars.outputs.labels }}
          # annotations: ${{ needs.set-vars.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=gha,scope=${{ inputs.tags }}
            type=registry,ref=${{ inputs.tags }}
          cache-to: |
            type=gha,mode=max,scope=${{ inputs.tags }}
          push: true
          sbom: true
          provenance: true
      - name: Delete Package Versions
        uses: actions/delete-package-versions@v4
        with:
          owner: ${{ github.repository_owner }}
          package-name: ci-test
          package-type: container
          delete-only-untagged-versions: true
          min-versions-to-keep: 0
  build-pages:
    name: Build Pages
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          tags: ${{ inputs.tags }}-base
          cache-from: |
            type=gha,scope=${{ inputs.tags }}
          load: true
      - name: Nimble Doc2
        shell: sh
        run: |
          docker run --rm -v $(pwd)/docs:/ci-test/docs ${{ inputs.tags }}-base nimble doc2 -o:docs/developer src/ci_test.nim
          find docs -name *.idx | xargs sudo rm
  nimble-test:
    name: Nimble Test
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          tags: ${{ inputs.tags }}-base
          cache-from: |
            type=gha,scope=${{ inputs.tags }}
          load: true
      - name: Nimble Test
        shell: sh
        run: |
          docker run --rm ${{ inputs.tags }}-base nimble test
  system-test:
    name: System Test
    runs-on: ubuntu-latest
    needs:
      - build-image
    services:
      ci-test:
        image: ${{ inputs.tags }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ github.token }}
    steps:
      - name: System Test
        shell: sh
        run: echo system test
