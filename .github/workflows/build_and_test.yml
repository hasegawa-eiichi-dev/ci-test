on:
  workflow_call:
    inputs:
      build_env:
        description: dev / stg / prd
        required: true
        type: string

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/ci-test
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            typr=raw,value={{base_ref}}
      - name: Build and Push  # test
        uses: docker/build-push-action@v5
        with:
          context: .
          target: build
          build-args: |
            build_env=${{ inputs.build_env }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/ci-test:multiple-tag-test
          # labels: ${{ steps.meta.outputs.labels }}
          # annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=gha,scope=${{ steps.meta.outputs.tags }}
            type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: |
            type=gha,mode=max,scope=${{ steps.meta.outputs.tags }}
          push: true
          sbom: true
          provenance: true
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            build_env=${{ inputs.build_env }}
          tags: |
            ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}
          # annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=gha,scope=${{ steps.meta.outputs.tags }}
            type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: |
            type=gha,mode=max,scope=${{ steps.meta.outputs.tags }}
          push: true
          sbom: true
          provenance: true
      # - name: Delete Package Versions
      #   uses: actions/delete-package-versions@v4
      #   with:
      #     owner: ${{ github.repository_owner }}
      #     package-name: ci-test
      #     package-type: container
      #     delete-only-untagged-versions: true
      #     min-versions-to-keep: 0
      # test
      - name: Docker Metadata Action
        id: meta2
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=branch
            type=ref,event=pr
      - name: Get Version ID
        id: get-version-id
        shell: sh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -eu
          echo id=$(
            gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /user/packages/container/ci-test/versions \
              --jq ".[]|select(.name==${{ steps.meta2.outputs.tags }})|.id"
          ) >> $GITHUB_OUTPUT
      - name: Delete Package Versions
        uses: actions/delete-package-versions@v4
        with:
          owner: ${{ github.repository_owner }}
          package-name: ci-test
          package-type: container
          package-version-ids: 171864973  # ${{ steps.get-version-id.outputs.id }}
      # test
  build-pages:
    name: Build Pages
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          tags: ${{ needs.build-image.outputs.tags }}-base
          cache-from: |
            type=gha,scope=${{ needs.build-image.outputs.tags }}
          load: true
      - name: Nimble Doc2
        shell: sh
        run: |
          docker run --rm -v $(pwd)/docs:/ci-test/docs ${{ needs.build-image.outputs.tags }}-base nimble doc2 -o:docs/developer src/ci_test.nim
          find docs -name *.idx | xargs sudo rm
  nimble-test:
    name: Nimble Test
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          tags: ${{ needs.build-image.outputs.tags }}-base
          cache-from: |
            type=gha,scope=${{ needs.build-image.outputs.tags }}
          load: true
      - name: Nimble Test
        shell: sh
        run: |
          docker run --rm ${{ needs.build-image.outputs.tags }}-base nimble test
  system-test:
    name: System Test
    runs-on: ubuntu-latest
    needs:
      - build-image
    services:
      ci-test:
        image: ${{ needs.build-image.outputs.tags }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ github.token }}
    steps:
      - name: System Test
        shell: sh
        run: echo system test
